[0/1] Planning build
Building for debugging...
[0/3] Write swift-version--1BFCD5C06E9F820A.txt
[2/4] Emitting module SwiftAzureOpenAI
[4/6] Emitting module AdvancedConsoleChatbot
Build of product 'AdvancedConsoleChatbot' complete! (0.85s)
🔧 Demo Mode - Advanced Console Chatbot
=======================================
This example demonstrates all SwiftAzureOpenAI features in an interactive console:

📝 Features showcased:
• ✅ Function calling (weather API)
• ✅ Code interpreter tool
• ✅ Mathematical calculator
• ✅ Multi-modal support (images)
• ✅ Conversation history chaining
• ✅ Interactive command handling
• ✅ Tool result processing

🚀 To run with real API:
1. Set environment variables:
   export AZURE_OPENAI_ENDPOINT='https://your-resource.openai.azure.com'
   export AZURE_OPENAI_API_KEY='your-api-key'
   export AZURE_OPENAI_DEPLOYMENT='gpt-4o'
2. Uncomment the line below and run:
   // Task { await AdvancedConsoleChatbot().start() }

💡 Example interactions:
👤 User: weather:Tokyo
🤖 Assistant: 🔧 Calling tool: get_weather
             The current weather in Tokyo is 22°C and sunny...

👤 User: code:print('Hello, World!')
🤖 Assistant: 🐍 Executing: print('Hello, World!')
             I've executed your Python code. Output: Hello, World!

👤 User: calc:sqrt(64)
🤖 Assistant: 🧮 Calculating: sqrt(64)
             The square root of 64 is 8.

👤 User: image:https://example.com/photo.jpg
🤖 Assistant: I can see this is an image showing...
