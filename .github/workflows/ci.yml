name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-macos:
    name: Test on macOS
    runs-on: macos-15
    strategy:
      matrix:
        swift-version: ['6.0.2']
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Select Xcode version
      run: |
        # Use Xcode 16.0 which includes Swift 6.0.2
        sudo xcode-select -s /Applications/Xcode_16.0.app/Contents/Developer || {
          echo "Xcode 16.0 not available, using default"
          sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
        }
    
    - name: Show available Xcode versions
      run: ls /Applications/ | grep Xcode
    
    - name: Show Swift version
      run: swift --version
    
    - name: Show package info
      run: swift package describe
    
    - name: Build debug
      run: swift build
    
    - name: Build release
      run: swift build --configuration release
    
    - name: Run tests
      run: swift test
    
    - name: Run tests (release)
      run: swift test --configuration release
    
    - name: Run tests (parallel)
      run: swift test --parallel

  test-linux:
    name: Test on Linux
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        swift-version: ['6.0.2']
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Install Swift
      run: |
        # Download and install Swift 6.0.2 from Swift.org
        SWIFT_VERSION=${{ matrix.swift-version }}
        SWIFT_URL="https://download.swift.org/swift-${SWIFT_VERSION}-release/ubuntu2204/swift-${SWIFT_VERSION}-RELEASE/swift-${SWIFT_VERSION}-RELEASE-ubuntu22.04.tar.gz"
        
        echo "Installing Swift ${SWIFT_VERSION} from ${SWIFT_URL}"
        
        # Install dependencies first
        sudo apt-get update
        sudo apt-get install -y libc6-dev libicu-dev libcurl4-openssl-dev libssl-dev
        
        # Download Swift
        curl -fsSL "${SWIFT_URL}" -o swift.tar.gz
        
        # Extract Swift
        sudo tar -xzf swift.tar.gz -C /opt/
        
        # Add to PATH
        echo "/opt/swift-${SWIFT_VERSION}-RELEASE-ubuntu22.04/usr/bin" >> $GITHUB_PATH
        
        # Verify installation
        /opt/swift-${SWIFT_VERSION}-RELEASE-ubuntu22.04/usr/bin/swift --version || {
          echo "❌ Swift installation failed"
          exit 1
        }
        
        echo "✅ Swift ${SWIFT_VERSION} installed successfully"
    
    - name: Show Swift version
      run: swift --version
    
    - name: Show package info
      run: swift package describe
    
    - name: Build debug
      run: swift build
    
    - name: Build release
      run: swift build --configuration release
    
    - name: Run tests
      run: swift test
    
    - name: Run tests (release)
      run: swift test --configuration release
    
    - name: Run tests (parallel)
      run: swift test --parallel

  validate-package:
    name: Validate Package
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Install Swift
      run: |
        # Download and install Swift 6.0.2 from Swift.org
        SWIFT_VERSION="6.0.2"
        SWIFT_URL="https://download.swift.org/swift-${SWIFT_VERSION}-release/ubuntu2204/swift-${SWIFT_VERSION}-RELEASE/swift-${SWIFT_VERSION}-RELEASE-ubuntu22.04.tar.gz"
        
        echo "Installing Swift ${SWIFT_VERSION} from ${SWIFT_URL}"
        
        # Install dependencies first
        sudo apt-get update
        sudo apt-get install -y libc6-dev libicu-dev libcurl4-openssl-dev libssl-dev
        
        # Download Swift
        curl -fsSL "${SWIFT_URL}" -o swift.tar.gz
        
        # Extract Swift
        sudo tar -xzf swift.tar.gz -C /opt/
        
        # Add to PATH
        echo "/opt/swift-${SWIFT_VERSION}-RELEASE-ubuntu22.04/usr/bin" >> $GITHUB_PATH
        
        # Verify installation
        /opt/swift-${SWIFT_VERSION}-RELEASE-ubuntu22.04/usr/bin/swift --version || {
          echo "❌ Swift installation failed"
          exit 1
        }
        
        echo "✅ Swift ${SWIFT_VERSION} installed successfully"
    
    - name: Validate package structure
      run: swift package describe
    
    - name: Check for external dependencies
      run: |
        DEPS=$(swift package show-dependencies)
        echo "Dependencies output: $DEPS"
        if [ "$DEPS" = "No external dependencies found" ]; then
          echo "✅ No external dependencies confirmed"
        else
          echo "❌ Unexpected external dependencies found:"
          echo "$DEPS"
          exit 1
        fi
    
    - name: Build for multiple platforms
      run: |
        echo "Building for supported platforms..."
        swift build
        echo "✅ Build successful"
    
    - name: Package validation
      run: |
        echo "Running package validation..."
        swift package compute-checksum Package.swift || echo "Checksum command not available"
        echo "✅ Package validation complete"

  code-quality:
    name: Code Quality
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Install Swift
      run: |
        # Download and install Swift 6.0.2 from Swift.org
        SWIFT_VERSION="6.0.2"
        SWIFT_URL="https://download.swift.org/swift-${SWIFT_VERSION}-release/ubuntu2204/swift-${SWIFT_VERSION}-RELEASE/swift-${SWIFT_VERSION}-RELEASE-ubuntu22.04.tar.gz"
        
        echo "Installing Swift ${SWIFT_VERSION} from ${SWIFT_URL}"
        
        # Install dependencies first
        sudo apt-get update
        sudo apt-get install -y libc6-dev libicu-dev libcurl4-openssl-dev libssl-dev
        
        # Download Swift
        curl -fsSL "${SWIFT_URL}" -o swift.tar.gz
        
        # Extract Swift
        sudo tar -xzf swift.tar.gz -C /opt/
        
        # Add to PATH
        echo "/opt/swift-${SWIFT_VERSION}-RELEASE-ubuntu22.04/usr/bin" >> $GITHUB_PATH
        
        # Verify installation
        /opt/swift-${SWIFT_VERSION}-RELEASE-ubuntu22.04/usr/bin/swift --version || {
          echo "❌ Swift installation failed"
          exit 1
        }
        
        echo "✅ Swift ${SWIFT_VERSION} installed successfully"
    
    - name: Check for warnings
      run: |
        echo "Building and checking for warnings..."
        swift build 2>&1 | tee build.log
        if grep -i "warning" build.log; then
          echo "❌ Warnings found in build"
          exit 1
        else
          echo "✅ No warnings found"
        fi
    
    - name: Check test coverage
      run: |
        echo "Running test coverage analysis..."
        swift test --parallel
        echo "✅ All tests passed"
