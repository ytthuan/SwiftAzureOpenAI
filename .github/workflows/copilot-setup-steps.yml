name: "Copilot Setup Steps"

# Automatically run the setup steps when they are changed to allow for easy validation, and
# allow manual testing through the repository's "Actions" tab
on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  # The job MUST be called `copilot-setup-steps` or it will not be picked up by Copilot.
  copilot-setup-steps:
    runs-on: ubuntu-latest

    # Set the permissions to the lowest permissions possible needed for your steps.
    # Copilot will be given its own token for its operations.
    permissions:
      # If you want to clone the repository as part of your setup steps, for example to install dependencies, you'll need the `contents: read` permission. If you don't clone the repository in your setup steps, Copilot will do this for you automatically after the steps complete.
      contents: read

    # You can define any steps you want, and they will run before the agent starts.
    # If you do not check out your code, Copilot will do this for you.
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Swift dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libc6-dev libicu-dev libcurl4-openssl-dev libssl-dev curl

      - name: Install Swift 6.0.2
        run: |
          # Download and install Swift 6.0.2 from Swift.org for Swift Package Manager support
          SWIFT_VERSION="6.0.2"
          SWIFT_URL="https://download.swift.org/swift-${SWIFT_VERSION}-release/ubuntu2204/swift-${SWIFT_VERSION}-RELEASE/swift-${SWIFT_VERSION}-RELEASE-ubuntu22.04.tar.gz"
          
          echo "Installing Swift ${SWIFT_VERSION} from ${SWIFT_URL}"
          
          # Download Swift
          curl -fsSL "${SWIFT_URL}" -o swift.tar.gz
          
          # Extract Swift
          sudo tar -xzf swift.tar.gz -C /opt/
          
          # Add to PATH
          echo "/opt/swift-${SWIFT_VERSION}-RELEASE-ubuntu22.04/usr/bin" >> $GITHUB_PATH
          
          # Verify installation
          /opt/swift-${SWIFT_VERSION}-RELEASE-ubuntu22.04/usr/bin/swift --version
          
          echo "✅ Swift ${SWIFT_VERSION} installed successfully"

      - name: Verify Swift Package Manager setup
        run: |
          swift --version
          swift package describe

      - name: Resolve package dependencies
        run: |
          # SwiftAzureOpenAI has no external dependencies, but this ensures the package is valid
          swift package resolve

      - name: Pre-build the package
        run: |
          # Pre-build the package to cache compiled modules for faster Copilot operations
          swift build
          echo "✅ Package pre-built successfully"

      - name: Validate test environment
        run: |
          # Validate that tests can run (without actually running them to avoid API costs)
          swift test --list-tests > /dev/null 2>&1 && echo "✅ Test environment configured correctly" || echo "❌ Test environment needs attention"

      - name: Display environment information
        run: |
          echo "Environment configured for SwiftAzureOpenAI development:"
          echo "- Swift version: $(swift --version)"
          echo "- Package dependencies resolved: $(swift package show-dependencies 2>/dev/null || echo 'No external dependencies')"
          echo "- Build tools ready: ✅"
          echo "- Azure OpenAI environment variables available through GitHub secrets/variables"
          echo "- Ready for Copilot agent operations"